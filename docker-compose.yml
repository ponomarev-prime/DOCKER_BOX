version: '3'

services:
  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/ssl/certs
      - ./nginx/html:/usr/share/nginx/html
      - ./apache/html:/var/www/html
      - ./python-app:/app
      - ./nodejs-app:/app
    depends_on:
      - adminer
      - apache
      - python-app
      - nodejs-app
    networks:
      - app-network

  apache:
    image: httpd:latest
    volumes:
      - ./apache/html:/var/www/html
      - ./apache/conf/httpd.conf:/usr/local/apache2/conf/httpd.conf
    networks:
      - app-network
    depends_on:
        - php

  adminer:
    image: adminer
    restart: always
    environment:
      ADMINER_DESIGN: pepa-linha-dark
    networks:
      - app-network

  php:
    build:
      context: .
      dockerfile: Dockerfile.php
    volumes:
      - ./apache/html:/var/www/html
    networks:
      - app-network        

  python-app:
    build:
      context: .
      dockerfile: Dockerfile.python
    command: python ./app_html.py
    volumes:
      - ./python-app:/app
    networks:
      - app-network
    depends_on:
      - postgres

  nodejs-app:
    image: node:19
    volumes:
      - ./nodejs-app:/app
    command: >
      sh -c "cd /app && node index.js"
    #  sh -c "cd /app && node index.js"
    #  sh -c "cd /app && npm install -g npm@9.6.6 && npm install mysql express faker && node index.js"
    depends_on:
      - mariadb
    networks:
      - app-network

  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  mariadb:
    image: mariadb:latest
    environment:
      - MARIADB_ROOT_PASSWORD=my_root_password
      - MARIADB_DATABASE=my_database
      - MARIADB_USER=my_user
      - MARIADB_PASSWORD=my_password
    volumes:
      - ./mariadb:/var/lib/mysql
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: my_database
      MYSQL_USER: my_username
      MYSQL_PASSWORD: my_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge